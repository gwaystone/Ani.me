/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./js/script.js":
/*!**********************!*\
  !*** ./js/script.js ***!
  \**********************/
/***/ (() => {

eval("// Mobile Menu\r\nconst menuBtn = document.querySelector('[data-menu=\"menu\"]');\r\nconst menu = document.querySelector(\".menu-links\");\r\n\r\nmenuBtn.addEventListener(\"click\", toggleMenu);\r\n\r\nfunction toggleMenu(event) {\r\n  menu.classList.toggle(\"ativo\");\r\n}\r\n\r\ndocument.addEventListener(\"click\", closeMenu);\r\n\r\nfunction closeMenu(event) {\r\n  const isOutsideClick = menu.contains(event.target);\r\n\r\n  if (!isOutsideClick && event.target !== menuBtn) {\r\n    menu.classList.remove(\"ativo\");\r\n  }\r\n}\r\n\r\n// Search\r\nconst searchBtn = document.querySelector(\".search-icon\");\r\nconst searchMobile = document.querySelector(\"#search-mobile\");\r\nconst logo = document.querySelector(\".font-1-logo\");\r\n\r\nsearchBtn.addEventListener(\"click\", (e) => {\r\n  searchBtn.classList.add(\"active\");\r\n  searchMobile.classList.add(\"active\");\r\n  searchMobile.focus();\r\n\r\n  if (window.innerWidth <= 767) {\r\n    logo.style.display = \"none\";\r\n  }\r\n});\r\n\r\nsearchMobile.addEventListener(\"focusout\", () => {\r\n  searchBtn.classList.remove(\"active\");\r\n  searchMobile.classList.remove(\"active\");\r\n  logo.style.display = \"block\";\r\n});\r\n\r\n// Single Anime fetch Info from anime\r\nasync function getAnimeInfo() {\r\n  // Define o parámetro de busca através da URL\r\n  const queryString = window.location.search;\r\n  const searchParams = new URLSearchParams(queryString);\r\n  const animeSearch = searchParams.get(\"anime\");\r\n\r\n  // Busca pelo anime usando a API do gogoanime com base no parámetro da URL e retorna o animeId\r\n  try {\r\n    const urlFetchSearch = `https://gogoanime.consumet.org/search?keyw=${animeSearch}`;\r\n    const fetchSearch = await fetch(urlFetchSearch);\r\n    const fetchSearchJson = await fetchSearch.json();\r\n    const anime = fetchSearchJson[0].animeId;\r\n\r\n    // Utiliza o animeId para buscar as informações do anime.\r\n    const urlFetchDetails = `https://gogoanime.consumet.org/anime-details/${anime}`;\r\n    const fetchDetails = await fetch(urlFetchDetails);\r\n    const fetchDetailsJson = await fetchDetails.json();\r\n\r\n    return fetchDetailsJson;\r\n  } catch (error) {\r\n    window.location.href = window.location.origin + \"/404.html\";\r\n  }\r\n}\r\n\r\nasync function getTrailerData() {\r\n  // Define o parámetro de busca através da URL\r\n  const queryString = window.location.search;\r\n  const searchParams = new URLSearchParams(queryString);\r\n  const animeSearch = searchParams.get(\"anime\");\r\n\r\n  // Faz busca na API do Kitsu para pegar informações complementares\r\n  const fetchKitsuUrl = `https://kitsu.io/api/edge/anime?filter[text]=${animeSearch}`;\r\n  const fetchKitsu = await fetch(fetchKitsuUrl);\r\n  const kitsuDetails = await fetchKitsu.json();\r\n\r\n  return kitsuDetails;\r\n}\r\n\r\nasync function addAnimeDetails() {\r\n  const animeDetails = await getAnimeInfo();\r\n  const kitsuDetails = await getTrailerData();\r\n\r\n  // Pega os elementos DOM da página\r\n  const pageAnimeTitle = document.querySelector(\"#anime-single .video h1\");\r\n  const pageAnimeEpisodes = document.querySelector(\".sinopse-content li.episodes\");\r\n  const pageAnimeStatus = document.querySelector(\".sinopse-content li.status\");\r\n  const pageAnimeGeneros = document.querySelector(\".sinopse-content li.genero\");\r\n  const pageAnimePosterWrapper = document.querySelector(\".sinopse-img\");\r\n  const sinopse = document.querySelector(\".sinopse-paragraph-content\");\r\n  const videoWrapper = document.querySelector(\".video-embed\");\r\n\r\n  // Operador ternário para traduzir o status do anime\r\n  const isAnimeFinished = animeDetails.status === \"Completed\" ? \"Completo\" : \"Lançando\";\r\n\r\n  // Adiciona os valores e remove a class Skeleton\r\n  pageAnimeTitle.classList.remove(\"skeleton\");\r\n  pageAnimeTitle.innerText = `${animeDetails.animeTitle} (${animeDetails.releasedDate})`;\r\n  pageAnimeEpisodes.innerHTML = `<span class=\"info\">Duração: </span><span class=\"info-content\">${animeDetails.episodesList.length} Episódios.</span>`;\r\n  pageAnimeStatus.innerHTML = `<span class=\"info\">Status: </span><span class=\"info-content\">${isAnimeFinished}.</span>`;\r\n  pageAnimeGeneros.innerHTML = `<span class=\"info\">Gêneros: </span><span class=\"info-content\">${animeDetails.genres\r\n    .slice(0, 3)\r\n    .join(\", \")}.</span>`;\r\n  sinopse.classList.remove(\"skeleton\");\r\n  sinopse.innerText = `${animeDetails.synopsis}`;\r\n\r\n  // Adiciona o poster\r\n  const poster = document.createElement(\"img\");\r\n  poster.src = animeDetails.animeImg;\r\n  poster.alt = animeDetails.animeTitle;\r\n  pageAnimePosterWrapper.classList.remove(\"skeleton\");\r\n  pageAnimePosterWrapper.append(poster);\r\n\r\n  // Pega o Trailer ID do YouTube\r\n  const trailerID = kitsuDetails.data[0].attributes.youtubeVideoId;\r\n  const youtubeEmbed = `<iframe src=\"https://www.youtube.com/embed/${trailerID}\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>`;\r\n  videoWrapper.outerHTML = youtubeEmbed;\r\n}\r\n\r\nasync function recentEpisodes() {\r\n  const animeItemWrapper = document.querySelector(\"div.grid-latest\");\r\n  const popularItemWrapper = document.querySelector(\"div.grid-recent\");\r\n\r\n  // Fetch últimos episódios\r\n  const urlFetch = \"https://gogoanime.consumet.org/recent-release?page=1\";\r\n  const fetchRecent = await fetch(urlFetch);\r\n  const recentJson = await fetchRecent.json();\r\n\r\n  // Fetch Popular\r\n  const urlFetchPopular = \"https://gogoanime.consumet.org/popular\";\r\n  const fetchPopular = await fetch(urlFetchPopular);\r\n  const popularJson = await fetchPopular.json();\r\n\r\n  // Adiciona os últimos episódios ao grid.\r\n  const recentEpisodes = recentJson.map((e, i) => {\r\n    if (i < 10) {\r\n      const animeItem = document.createElement(\"a\");\r\n      animeItem.setAttribute(\"href\", \"./anime.html\" + \"?anime=\" + e.animeTitle);\r\n      animeItem.classList.add(\"anime-item\");\r\n      animeItem.innerHTML = `\r\n      <div class=\"cover\">\r\n      <span class=\"episode font-2-mr\">Episódio ${e.episodeNum}</span>\r\n      <img src=\"${e.animeImg}\" alt=\"${e.animeTitle}\" />\r\n      </div>\r\n      <span class=\"anime-title font-1-m\">${e.animeTitle}</span>\r\n      `;\r\n\r\n      animeItemWrapper.append(animeItem);\r\n      if (document.querySelector(\".lds-ellipsis\")) document.querySelector(\".lds-ellipsis\").remove();\r\n    }\r\n  });\r\n\r\n  const popularEpisodes = popularJson.map((e, i) => {\r\n    if (i < 6) {\r\n      const animeItem = document.createElement(\"a\");\r\n      animeItem.setAttribute(\"href\", \"./anime.html\" + \"?anime=\" + e.animeTitle);\r\n      animeItem.classList.add(\"anime-item\");\r\n      animeItem.innerHTML = `\r\n      <div class=\"cover\">\r\n      \r\n      <img src=\"${e.animeImg}\" alt=\"${e.animeTitle}\" />\r\n      </div>\r\n      <span class=\"anime-title font-1-m\">${e.animeTitle}</span>\r\n      `;\r\n      popularItemWrapper.append(animeItem);\r\n      if (document.querySelector(\".lds-ellipsis\")) document.querySelector(\".lds-ellipsis\").remove();\r\n    }\r\n  });\r\n\r\n  // Add style de Grid de volta aos Wrappers\r\n  popularItemWrapper.style.cssText = \"display:grid\";\r\n  animeItemWrapper.style.cssText = \"display:grid\";\r\n}\r\n\r\nfunction searchAnime() {\r\n  const searchBar = document.querySelector(\"#search\");\r\n  const searchMobile = document.querySelector(\"#search-mobile\");\r\n  const searchButton = document.querySelector(\"#search-btn\");\r\n\r\n  searchBar.addEventListener(\"keyup\", search);\r\n  searchMobile.addEventListener(\"keyup\", searchMobileEvent);\r\n\r\n  searchButton.addEventListener(\"click\", search);\r\n\r\n  function search(event) {\r\n    console.log(event);\r\n\r\n    if (event.type === \"keyup\") {\r\n      if (searchBar.value.length !== 0) {\r\n        searchButton.classList.add(\"ativo\");\r\n      } else {\r\n        searchButton.classList.remove(\"ativo\");\r\n      }\r\n    }\r\n\r\n    if (event.keyCode === 13 || (event.type === \"click\" && searchBar.value.length !== 0)) {\r\n      window.location.href = window.location.origin + \"/search.html?q=\" + searchBar.value + \"&page=1\";\r\n    }\r\n\r\n    if (event.keyCode === 13 || (event.type === \"click\" && searchBar.value.length === 0)) {\r\n      searchBar.classList.add(\"invalido\");\r\n      console.log(searchBar.classList);\r\n    } else {\r\n      searchBar.classList.remove(\"invalido\");\r\n    }\r\n  }\r\n\r\n  function searchMobileEvent(event) {\r\n    if (event.keyCode === 13 && searchMobile.value.length !== 0) {\r\n      window.location.href = window.location.origin + \"/search.html?q=\" + searchMobile.value + \"&page=1\";\r\n    }\r\n\r\n    if (event.keyCode === 13 && searchMobile.value.length === 0) {\r\n      searchMobile.classList.add(\"invalido\");\r\n    }\r\n  }\r\n}\r\n\r\nasync function searchResults() {\r\n  const searchQuery = new URLSearchParams(window.location.search);\r\n  const pagination = searchQuery.get(\"page\");\r\n  const fetchUrl = `https://gogoanime.consumet.org/search?keyw=${searchQuery.get(\"q\")}&page=${pagination}`;\r\n\r\n  // Alterar HTML\r\n  const searchHeader2 = document.querySelector(\".font-1-xl.search-query\");\r\n  searchHeader2.innerText = searchQuery.get(\"q\");\r\n\r\n  // Start Fetch\r\n  let fetchQuery = await fetch(fetchUrl);\r\n  let bodyFetch = await fetchQuery.json();\r\n\r\n  // remove itens antigos\r\n  document.querySelector(\".search-results\").replaceChildren();\r\n\r\n  console.log(bodyFetch);\r\n  if (bodyFetch.length !== 0) {\r\n    // Cria a lista\r\n    for (result of bodyFetch) {\r\n      // Cria HTML para cada item da Lista\r\n      const wrapperLi = document.createElement(\"li\");\r\n      wrapperLi.setAttribute(\"class\", \"result-item\");\r\n      wrapperLi.innerHTML = `\r\n      <a href=\"${window.location.origin}/anime.html?anime=${result.animeId}\">\r\n      <div class=\"sinopse-img skeleton\"></div>\r\n      <div class=\"result-container\">\r\n      <h3 class=\"skeleton font-1-m\">${result.animeTitle}</h3>\r\n    <p class=\"skeleton font-1-m\">${result.status}</p>\r\n    </div>\r\n    </a>\r\n    `;\r\n\r\n      // Cria o Poster\r\n      const poster = document.createElement(\"img\");\r\n      poster.src = result.animeImg;\r\n      poster.alt = result.animeTitle;\r\n      wrapperLi.querySelector(\".sinopse-img\").classList.remove(\"skeleton\");\r\n      wrapperLi.querySelector(\".sinopse-img\").append(poster);\r\n\r\n      // Append HTML\r\n      document.querySelector(\".search-results\").append(wrapperLi);\r\n    }\r\n\r\n    // Paginação, próxima\r\n    if (bodyFetch.length === 20 && searchQuery.get(\"page\") == 1) {\r\n      const pagWrapper = document.createElement(\"ul\");\r\n      pagWrapper.setAttribute(\"class\", \"pagination-wrapper\");\r\n      pagWrapper.innerHTML = `\r\n      <li><a href=\"${window.location.origin}/search.html?q=${searchQuery.get(\"q\")}&page=${\r\n        Number(searchQuery.get(\"page\")) + 1\r\n      }\">Próxima</a>\r\n      `;\r\n      document.querySelector(\".search-page .container\").append(pagWrapper);\r\n    }\r\n\r\n    // Anterior e próxima\r\n    else if (bodyFetch.length === 20 && searchQuery.get(\"page\") >= 2) {\r\n      const pagWrapper = document.createElement(\"ul\");\r\n      pagWrapper.setAttribute(\"class\", \"pagination-wrapper\");\r\n\r\n      pagWrapper.innerHTML = `\r\n      <li><a href=\"${window.location.origin}/search.html?q=${searchQuery.get(\"q\")}&page=${\r\n        Number(searchQuery.get(\"page\")) - 1\r\n      }\">Anterior</a>\r\n      <li><a href=\"${window.location.origin}/search.html?q=${searchQuery.get(\"q\")}&page=${\r\n        Number(searchQuery.get(\"page\")) + 1\r\n      }\">Próxima</a>\r\n      `;\r\n      document.querySelector(\".search-page .container\").append(pagWrapper);\r\n    }\r\n\r\n    // Somente anterior\r\n    else if (bodyFetch.length < 20 && searchQuery.get(\"page\") >= 2) {\r\n      const pagWrapper = document.createElement(\"ul\");\r\n      pagWrapper.setAttribute(\"class\", \"pagination-wrapper\");\r\n\r\n      pagWrapper.innerHTML = `\r\n      <li><a href=\"${window.location.origin}/search.html?q=${searchQuery.get(\"q\")}&page=${\r\n        Number(searchQuery.get(\"page\")) - 1\r\n      }\">Anterior</a>\r\n      `;\r\n      document.querySelector(\".search-page .container\").append(pagWrapper);\r\n    }\r\n  }\r\n\r\n  // Se não existir anime, 404\r\n  else {\r\n    const errorMsg = document.createElement(\"div\");\r\n    errorMsg.setAttribute(\"class\", \"error-not-found\");\r\n    errorMsg.innerHTML = `\r\n    <div class='container'>\r\n    <h3>Anime não encontrado, tente buscar por outro termo.</h3>\r\n    </div>`;\r\n\r\n    errorMsg.style.cssText = `\r\n      height: calc(100vh - 454px);\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      background: no-repeat url(../img/killua.jpg) rgba(6, 9, 15, .9);\r\n      background-position: center center;\r\n      background-blend-mode: overlay;\r\n      background-size: cover;\r\n      position: relative;\r\n      box-shadow: inset 0px 35px 35px var(--cor-g0), inset 0px -35px 35px var(--cor-g0);\r\n      font-family: \"Rubik\";\r\n      font-style: normal;\r\n      font-weight: 500;\r\n      font-size: 2.5rem;\r\n      color: var(--cor-p1);\r\n      z-index: 2;\r\n      text-align: center;`;\r\n\r\n    document.querySelector(\".search-page\").appendChild(errorMsg);\r\n  }\r\n}\r\n\r\nsearchAnime();\r\n\r\nasync function releases() {\r\n  const animeItemWrapper = document.querySelector(\"div.grid-latest\");\r\n  const popularItemWrapper = document.querySelector(\"div.grid-recent\");\r\n\r\n  // Fetch últimos episódios\r\n  const searchQuery = new URLSearchParams(window.location.search);\r\n  const pagination = searchQuery.get(\"page\");\r\n  const urlFetch = \"https://gogoanime.consumet.org/recent-release?page=\" + pagination;\r\n  const fetchRecent = await fetch(urlFetch);\r\n  const recentJson = await fetchRecent.json();\r\n\r\n  // Adiciona os últimos episódios ao grid.\r\n  const recentEpisodes = recentJson.map((e, i) => {\r\n    const animeItem = document.createElement(\"a\");\r\n    animeItem.setAttribute(\"href\", \"./anime.html\" + \"?anime=\" + e.animeTitle);\r\n    animeItem.classList.add(\"anime-item\");\r\n    animeItem.innerHTML = `\r\n      <div class=\"cover\">\r\n      <span class=\"episode font-2-mr\">Episódio ${e.episodeNum}</span>\r\n      <img src=\"${e.animeImg}\" alt=\"${e.animeTitle}\" />\r\n      </div>\r\n      <span class=\"anime-title font-1-m\">${e.animeTitle}</span>\r\n      `;\r\n\r\n    animeItemWrapper.append(animeItem);\r\n    if (document.querySelector(\".lds-ellipsis\")) document.querySelector(\".lds-ellipsis\").remove();\r\n  });\r\n\r\n  // Paginação, próxima\r\n  if (recentJson.length === 20 && searchQuery.get(\"page\") == 1) {\r\n    const pagWrapper = document.createElement(\"ul\");\r\n    pagWrapper.setAttribute(\"class\", \"pagination-wrapper\");\r\n    pagWrapper.innerHTML = `\r\n    <li><a href=\"${window.location.origin}/releases.html?page=${Number(searchQuery.get(\"page\")) + 1}\">Próxima</a>\r\n    `;\r\n    document.querySelector(\".releases\").append(pagWrapper);\r\n  }\r\n\r\n  // Anterior e próxima\r\n  else if (recentJson.length === 20 && searchQuery.get(\"page\") >= 2) {\r\n    const pagWrapper = document.createElement(\"ul\");\r\n    pagWrapper.setAttribute(\"class\", \"pagination-wrapper\");\r\n\r\n    pagWrapper.innerHTML = `\r\n    <li><a href=\"${window.location.origin}/releases.html?page=${Number(searchQuery.get(\"page\")) - 1}\">Anterior</a>\r\n    <li><a href=\"${window.location.origin}/releases.html?page=${Number(searchQuery.get(\"page\")) + 1}\">Próxima</a>\r\n    `;\r\n    document.querySelector(\".releases\").append(pagWrapper);\r\n  }\r\n\r\n  // Somente anterior\r\n  else if (recentJson.length < 20 && searchQuery.get(\"page\") >= 2) {\r\n    const pagWrapper = document.createElement(\"ul\");\r\n    pagWrapper.setAttribute(\"class\", \"pagination-wrapper\");\r\n\r\n    pagWrapper.innerHTML = `\r\n    <li><a href=\"${window.location.origin}/releases.html?page=${Number(searchQuery.get(\"page\")) - 1}\">Anterior</a>\r\n    `;\r\n    document.querySelector(\".releases\").append(pagWrapper);\r\n  }\r\n}\r\n\r\nreleases();\r\n\r\nif (window.location.pathname === \"/\") recentEpisodes();\r\n\r\nif (window.location.pathname.includes(\"anime.html\")) addAnimeDetails();\r\n\r\nif (window.location.pathname.includes(\"search.html\")) searchResults();\r\n\n\n//# sourceURL=webpack://Anime/./js/script.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./js/script.js"]();
/******/ 	
/******/ })()
;